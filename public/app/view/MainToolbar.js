// Generated by CoffeeScript 1.3.3
var __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

define(['jquery', 'underscore', 'backbone', 'backbone_marionette', 'text!view/tpl/main-toolbar.html'], function($, _, Backbone, BackboneMarionette, mainToolbarTpl) {
  /**
   * @class MainToolbar
   * Application toolbar displayed at the top of the app.
   * @extends BackboneMarionette.ItemView
  */

  var MainToolbar;
  return MainToolbar = (function(_super) {

    __extends(MainToolbar, _super);

    /**
     * @constructor
     * Creates a new MainToolbar instance.
     * @param {Object} [options] config options for BackboneMarionette.Layout.
     * @return {Object} MainToolbar instance.
    */


    function MainToolbar(options) {
      if (options == null) {
        options = {};
      }
      this.template = _.template(mainToolbarTpl);
      this.tagName = 'header';
      this.id = 'main_toolbar';
      return MainToolbar.__super__.constructor.call(this, options);
    }

    /**
     * @method @private
     * Highlights the icon corresponding to the current view being displayed.
     * @param {String} iconId DOM element id for the icon to highlight
    */


    MainToolbar.prototype.highlightIcon = function(iconId) {
      this.$('#' + icon(Id)).addClass('active');
    };

    return MainToolbar;

  })(BackboneMarionette.ItemView);
});
