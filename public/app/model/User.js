// Generated by CoffeeScript 1.3.3
var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

define(['jquery', 'underscore', 'backbone', 'app', 'model/Session'], function($, _, Backbone, App, Session) {
  /**
   * @class User
   * Current user
   * @extends Backbone.Model
  */

  var User;
  return User = (function(_super) {

    __extends(User, _super);

    /**
     * @constructor
     * Creates a new User model.
     * @param {Object} [attributes] attributes for Backbone.Model         
     * @param {Object} [options] config options for Backbone.Model
    */


    function User(attributes, options) {
      if (attributes == null) {
        attributes = {};
      }
      if (options == null) {
        options = {};
      }
      this.login = __bind(this.login, this);

      this.App = App;
      this.remote = true;
      this.url = 'https://cloud.ubuntuservergui.dev/main/login';
      this.defaults = {
        email: '',
        password: ''
      };
      this.session = new Session({});
      User.__super__.constructor.apply(this, arguments);
      return;
    }

    User.prototype.login = function() {
      $.ajax({
        url: 'https://cloud.ubuntuservergui.dev/main/login',
        type: 'POST',
        context: this,
        data: this.toJSON(),
        success: this.loginSuccess,
        error: this.loginError
      });
    };

    User.prototype.loginSuccess = function() {
      this.session.set('active', true);
    };

    User.prototype.loginError = function(jqXHR, textStatus) {
      var msg, _ref, _ref1;
      this.session.set('active', false);
      msg = (_ref = (_ref1 = jQuery.parseJSON(jqXHR.responseText)) != null ? _ref1.msg : void 0) != null ? _ref : 'error';
      this.App.vent.trigger('auth:invalidLoginRequest', msg);
    };

    return User;

  })(Backbone.Model);
});
