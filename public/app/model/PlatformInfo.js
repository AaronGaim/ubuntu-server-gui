// Generated by CoffeeScript 1.3.3
var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

define(['underscore', 'backbone', 'socket_io', 'app'], function(_, Backbone, io, App) {
  /**
   * @class PlatformInfo
   * Server operating system info.
   * @extends Backbone.Model
  */

  var PlatformInfo;
  return PlatformInfo = (function(_super) {

    __extends(PlatformInfo, _super);

    function PlatformInfo(options) {
      if (options == null) {
        options = {};
      }
      this.parse = __bind(this.parse, this);

      this.remote = true;
      this.url = 'http://10.0.1.5:3030/dash';
      this.defaults = {
        'codename': null,
        'release': null,
        'kernel': null
      };
      PlatformInfo.__super__.constructor.apply(this, arguments);
      this.ws = io.connect(this.url, App.ioConfig);
      this.ws.on('os-platform', this.parse);
      this.ws.emit('os-platform');
      return;
    }

    PlatformInfo.prototype.fetch = function(options) {
      if (options == null) {
        options = {};
      }
      this.ws.emit('os-platform');
    };

    PlatformInfo.prototype.parse = function(platformInfo) {
      platformInfo.codename = platformInfo.codename.charAt(0).toUpperCase() + platformInfo.codename.slice(1);
      this.set(platformInfo);
    };

    return PlatformInfo;

  })(Backbone.Model);
});
