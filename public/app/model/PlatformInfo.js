// Generated by CoffeeScript 1.3.3
var __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

define(['underscore', 'backbone'], function(_, Backbone) {
  /**
   * @class PlatformInfo
   * Server operating system info.
   * @extends Backbone.Model
  */

  var PlatformInfo;
  return PlatformInfo = (function(_super) {

    __extends(PlatformInfo, _super);

    /**
     * @constructor
     * Creates a new PlatformInfo model.
     * @param {Object} [options] config options for Backbone.Model.
     * @return {Object} PlatformInfo model.
    */


    function PlatformInfo(options) {
      if (options == null) {
        options = {};
      }
      this.remote = true;
      this.url = 'http://10.0.1.6:3000/os/platform';
      this.defaults = {
        'codename': null,
        'release': null,
        'kernel': null
      };
      PlatformInfo.__super__.constructor.apply(this, arguments);
      this.fetch();
      return;
    }

    /**
     * @method @private
     * Formats data returned from the server after fetch is called.
     * @param {Object} platformInfo JSON data from the server
     * @param {Object} [jqXHR] jQuery jqXHR
     * @return {Object} re-formmated JSON data
    */


    PlatformInfo.prototype.parse = function(platformInfo, jqXHR) {
      platformInfo.codename = platformInfo.codename.charAt(0).toUpperCase() + platformInfo.codename.slice(1);
      return platformInfo;
    };

    return PlatformInfo;

  })(Backbone.Model);
});
